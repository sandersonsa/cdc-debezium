apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  labels:
    strimzi.io/cluster: dbz-connect
  name: dbz-mysql-sink-connector
spec:
  class: io.debezium.connector.jdbc.JdbcSinkConnector
  tasksMax: 1  
  config:
    dialect.name: MySQL
    connector.class: io.debezium.connector.jdbc.JdbcSinkConnector
    connection.url: 'jdbc:mysql://mysql-backup:3306/inventory'
    connection.username: mysqluser
    connection.password: mysqlpw
    insert.mode: upsert
    schema.evolution: basic
    database.time_zone: UTC
    topics: customers
    auto.create: true
    primary.key.mode: record_key
    primary.key.fields: id
    transforms: unwrap
    transforms.unwrap.type: io.debezium.transforms.ExtractNewRecordState
    transforms.unwrap.drop.tombstones: false
    transforms.unwrap.delete.handling.mode: rewrite
    transforms.unwrap.add.fields: op,table
...


{
    "name": "jdbc-sink",
    "config": {
        "connector.class": "io.confluent.connect.jdbc.JdbcSinkConnector",
        "tasks.max": "1",
        "topics": "dbserver1_inventory_Hike",
        "connection.url": "jdbc:postgresql://postgres:5432/inventory?user=postgresuser&password=postgrespw",
        "transforms": "unwrap",
        "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
        "transforms.unwrap.drop.tombstones": "false",
        "auto.create": "true",
        "insert.mode": "upsert",
        "delete.enabled": "true",
        "pk.fields": "id",
        "pk.mode": "record_key",
        "key.converter": "io.confluent.connect.avro.AvroConverter",
        "value.converter": "io.confluent.connect.avro.AvroConverter",
        "key.converter.schema.registry.url": "http://schema-registry:8081",
        "value.converter.schema.registry.url": "http://schema-registry:8081"
    }
}

[CREATE TABLE dbserver1_inventory_customers (id integer NOT NULL, first_name longtext NOT NULL, last_name longtext NOT NULL, email longtext NOT NULL, PRIMARY KEY(id))]